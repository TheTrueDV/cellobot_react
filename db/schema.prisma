generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// --------------------------------------

model Bot {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  name          String @unique
  refresh_token String
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  name           String?
  oauthToken     String   @unique
  hashedPassword String?
  role           String   @default("USER")

  tokens   Token[]
  sessions Session[]
}

model Session {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Token {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  hashedToken String
  type        String
  expiresAt   DateTime
  sentTo      String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([hashedToken, type])
}

// --------------------------------------

model bots {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  refresh_token String
  name          String
}

model channels {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  twitchId   String
  loginToken String
  enabled    Boolean
}

model users {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  twitchId     String
  refreshToken String
  created_at   DateTime @default(now())
}

model variables {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
}

model globalcommands {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  aliases          String[]
  requiredRole     String[]
  permittedUserIds String[]
  enabled          Boolean
}

model disabledcommands {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  commandId String
  channelId String
  enabled   Boolean
}

model managers {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  twitchId  String
  channelId String
}

model roles {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
}

model commands {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  channelId        String
  name             String
  aliases          String[]
  replyText        String
  requiredRole     String[]
  permittedUserIds String[]
  enabled          Boolean
}
